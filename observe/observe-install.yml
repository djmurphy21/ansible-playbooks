---
# Synopsis:
# This Ansible playbook automates the installation and configuration of the Observe agent on all specified hosts.
# It ensures the agent is properly set up to monitor the host system and send telemetry data to the Observe platform.

# Description:
# The playbook performs the following tasks:
# 1. Add Observe Repository: Adds the Observe repository to the system's package manager to allow installation of the Observe agent.
# 2. Update Apt Cache: Updates the package manager's cache to include the newly added repository.
# 3. Install Observe Agent: Installs the Observe agent package from the repository.
# 4. Copy Custom Configuration: Copies custom configurations for otel-collector.yaml and logs.yaml to appropriate directories on the host.
# 5. Initialize Configuration: Initializes the Observe agent configuration using provided tokens and URLs, enabling various monitoring features.
# 6. Remove Specific Log File Inclusions: Removes specific log file inclusions from the Observe agent configuration.
# 7. Remove Syslog Inclusion: Removes syslog inclusion from the Observe agent configuration.
# 8. Start and Enable Service: Starts the Observe agent service and ensures it is enabled to start on boot.
# 9. Pin Observe Agent Version: Pins the Observe agent version to prevent automatic updates.

# Notes:
# - Variables: The playbook uses variables defined in an external file specified by `vars_file`. Ensure this file contains necessary variables such as `token` and `url`.
# - Permissions: The playbook requires elevated privileges (`become: yes`) to perform tasks such as adding repositories, installing packages, and modifying system files.
# - Custom Configuration: The custom `otel-collector.yaml` and `logs.yaml` files should be prepared and placed in specified source paths before running the playbook.
# - Service Management: The playbook uses the `systemd` module to manage the Observe agent service, ensuring it is started and enabled to run on system boot.

# Example:
# To run this playbook, use the following command:
# ansible-playbook -i <inventory_file> <playbook.yml> --extra-vars "vars_file=<path_to_vars_file>" --limit <hostname_or_group_name>
#
# Replace `<inventory_file>` with the path to your inventory file, `<playbook.yml>` with the name of this playbook file,
# `<path_to_vars_file>` with the path to your variables file, `<hostname_or_group_name>` with the target hostname or group name.

- name: Install and Configure Observe Agent
  hosts: all
  become: yes

  vars_files:
    - "{{ vars_file }}"

  vars:
    observe_repo_url: "https://repo.observeinc.com/apt/"
    observe_agent_service: observe-agent
    observe_config_dir: /etc/observe-agent
    observe_logs_dir: "{{ observe_config_dir }}/connections/host_monitoring"
    file_owner: root
    file_group: root
    file_mode: '0644'

  pre_tasks:
    - name: Check if required variables are defined
      assert:
        that:
          - observe_token is defined
          - observe_url is defined
        msg: "Required variables 'observe_token' and 'observe_url' must be defined in vars file"

    - name: Check if configuration files exist
      stat:
        path: "{{ item }}"
      loop:
        - "{{ playbook_dir }}/files/observe/{% if ansible_distribution_version == '24.04' %}24.04-{% endif %}otel-collector.yaml"
        - "{{ playbook_dir }}/files/observe/{% if ansible_distribution_version == '24.04' %}24.04-{% endif %}logs.yaml"
      register: config_files
      failed_when: not config_files.stat.exists
      delegate_to: localhost

  tasks:
    - name: Gather facts
      setup:

    - name: Add Observe repository
      apt_repository:
        repo: "deb [trusted=yes] {{ observe_repo_url }} /"
        state: present
        filename: observeinc
      register: repo_add

    - name: Update apt cache
      apt:
        update_cache: yes
      when: repo_add is changed

    - name: Install Observe agent
      apt:
        name: "{{ observe_agent_service }}"
        state: present
      register: install_status

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ file_owner }}"
        group: "{{ file_group }}"
        mode: "{{ file_mode }}"
      loop:
        - "{{ observe_config_dir }}"
        - "{{ observe_logs_dir }}"

    - name: Backup existing configuration files
      copy:
        src: "{{ item }}"
        dest: "{{ item }}.backup-{{ ansible_date_time.date }}"
        remote_src: yes
      loop:
        - "{{ observe_config_dir }}/otel-collector.yaml"
        - "{{ observe_logs_dir }}/logs.yaml"
      ignore_errors: yes
      when: install_status is changed

    - name: Copy configuration files
      copy:
        src: "{{ playbook_dir }}/files/observe/{% if ansible_distribution_version == '24.04' %}24.04-{% endif %}{{ item.name }}"
        dest: "{{ item.dest }}"
        owner: "{{ file_owner }}"
        group: "{{ file_group }}"
        mode: "{{ file_mode }}"
        validate: 'python -c "import yaml; yaml.safe_load(open(\"%s\", \"r\").read())"'
      loop:
        - { name: "otel-collector.yaml", dest: "{{ observe_config_dir }}/otel-collector.yaml" }
        - { name: "logs.yaml", dest: "{{ observe_logs_dir }}/logs.yaml" }
      when: ansible_os_family == 'Debian'
      register: config_copy

    - name: Initialize Observe agent configuration
      command: observe-agent init-config
        --token "{{ observe_token }}"
        --observe_url "{{ observe_url }}"
        --self_monitoring enabled=true
        --host_monitoring enabled=true
        --host_monitoring_logs enabled=true
        --host_monitoring_metrics_host enabled=true
        --host_monitoring_metrics_process enabled=true
      register: init_config
      changed_when: init_config.rc == 0
      failed_when: init_config.rc != 0
      no_log: true  # Hide sensitive token information from logs

    - name: Configure log exclusions
      blockinfile:
        path: /etc/observe-agent/observe-agent.yaml
        marker: "# {mark} ANSIBLE MANAGED BLOCK - LOG EXCLUSIONS"
        block: |
          # Excluding specific log patterns
          log_exclusions:
            - pattern: '/var/log/.*/.*\.log'
            - pattern: '/var/log/syslog'
        backup: yes

    - name: Start and enable Observe agent service
      systemd:
        name: "{{ observe_agent_service }}"
        state: started
        enabled: yes
        daemon_reload: yes
      register: service_status

    - name: Verify service is running
      systemd:
        name: "{{ observe_agent_service }}"
      register: service_check
      failed_when: service_check.status.ActiveState != "active"

    - name: Pin Observe Agent Version
      dpkg_selections:
        name: "{{ observe_agent_service }}"
        selection: hold
      register: pin_status

    - name: Show installation status
      debug:
        msg: "Observe agent installation completed successfully. Service status: {{ service_check.status.ActiveState }}"

  handlers:
    - name: Restore configuration on failure
      copy:
        src: "{{ item }}.backup-{{ ansible_date_time.date }}"
        dest: "{{ item }}"
        remote_src: yes
      loop:
        - "{{ observe_config_dir }}/otel-collector.yaml"
        - "{{ observe_logs_dir }}/logs.yaml"
      when: (config_copy.failed is defined and config_copy.failed) or
            (init_config.failed is defined and init_config.failed) or
            (service_status.failed is defined and service_status.failed)
      ignore_errors: yes
