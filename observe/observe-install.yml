---
# Updated Synopsis:
# This Ansible playbook streamlines the deployment and management of the Observe agent on specified hosts.
# It ensures the agent is correctly installed, configured, and operational to provide comprehensive system telemetry to the Observe platform.

# Updated Description:
# This playbook executes the following steps:
# 1. Add Observe Repository: Configures the system to access the Observe package repository.
# 2. Update Package Cache: Refreshes the system's package manager cache after adding the repository.
# 3. Install Observe Agent: Deploys the latest version of the Observe agent from the repository.
# 4. Prepare Directories: Creates required directories for configuration and logs with appropriate permissions.
# 5. Backup Existing Configuration: Safeguards existing configuration files before making changes.
# 6. Apply Custom Configuration: Transfers custom otel-collector and log configuration files to the target system.
# 7. Initialize Observe Configuration: Sets up the Observe agent with provided credentials and feature toggles.
# 8. Configure Log Exclusions: Excludes specific logs from being monitored or collected.
# 9. Manage Agent Service: Starts and enables the Observe agent service to ensure it runs on system boot.
# 10. Pin Agent Version: Prevents unintended upgrades of the Observe agent by locking its version.

# Updated Notes:
# - Variable Management: Ensure the external `vars_file` contains mandatory variables (`observe_token` and `observe_url`).
# - System Requirements: The playbook requires elevated privileges (`become: yes`) to execute system-level changes.
# - Configuration Files: Place customized `otel-collector.yaml` and `logs.yaml` files in the specified paths before execution.
# - Service Reliability: The `systemd` module ensures the Observe agent service is persistently active and enabled.
# - Error Handling: Includes measures to back up and restore configurations to mitigate risks during deployment.

# Example Usage:
# To execute the playbook:
# ansible-playbook -i <inventory_file> <playbook.yml> --extra-vars "vars_file=<path_to_vars_file>" --limit <hostname_or_group_name>
# Replace placeholders as needed for your environment.

- name: Install and Configure Observe Agent
  hosts: all
  become: yes

  vars_files:
    - "{{ vars_file }}"

  vars:
    # The URL of the Observe repository to add to the system's package manager
    observe_repo_url: "https://repo.observeinc.com/apt/"
    # The name of the Observe agent service to manage
    observe_agent_service: observe-agent
    # The directory where the Observe agent configuration files are stored
    observe_config_dir: /etc/observe-agent
    # The directory where the Observe agent logs configuration files are stored
    observe_logs_dir: "{{ observe_config_dir }}/connections/host_monitoring"
    # The owner and group of the configuration files to be created
    file_owner: root
    file_group: root
    # The permissions of the configuration files to be created
    file_mode: '0644'

  pre_tasks:
    - name: Check if required variables are defined
      assert:
        that:
          - observe_token is defined
          - observe_url is defined
        msg: "Required variables 'observe_token' and 'observe_url' must be defined in vars file"

    - name: Check if configuration files exist
      stat:
        path: "{{ item }}"
      loop:
        - "{{ playbook_dir }}/files/observe/{% if ansible_distribution_version == '24.04' %}24.04-{% endif %}otel-collector.yaml"
        - "{{ playbook_dir }}/files/observe/{% if ansible_distribution_version == '24.04' %}24.04-{% endif %}logs.yaml"
      register: config_files
      failed_when: not config_files.stat.exists
      delegate_to: localhost

  tasks:
    - name: Gather facts
      setup:
      debug:
        msg: "Gathered facts successfully."
      changed_when: False

    - name: Add Observe repository
      apt_repository:
        repo: "deb [trusted=yes] {{ observe_repo_url }} /"
        state: present
        filename: observeinc
      register: repo_add
      debug:
        msg: "Added Observe repository."
      changed_when: repo_add is changed

    - name: Update apt cache
      apt:
        update_cache: yes
      when: repo_add is changed
      debug:
        msg: "Updated apt cache."
      changed_when: False

    - name: Install Observe agent
      apt:
        name: "{{ observe_agent_service }}"
        state: present
      register: install_status
      debug:
        msg: "Installed Observe agent."
      changed_when: install_status is changed

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ file_owner }}"
        group: "{{ file_group }}"
        mode: "{{ file_mode }}"
      loop:
        - "{{ observe_config_dir }}"
        - "{{ observe_logs_dir }}"
      debug:
        msg: "Created required directories."
      changed_when: False

    - name: Backup existing configuration files
      copy:
        src: "{{ item }}"
        dest: "{{ item }}.backup-{{ ansible_date_time.date }}"
        remote_src: yes
      loop:
        - "{{ observe_config_dir }}/otel-collector.yaml"
        - "{{ observe_logs_dir }}/logs.yaml"
      ignore_errors: yes
      when: install_status is changed
      debug:
        msg: "Backed up existing configuration files."
      changed_when: False

    - name: Copy configuration files
      copy:
        src: "{{ playbook_dir }}/files/observe/{% if ansible_distribution_version == '24.04' %}24.04-{% endif %}{{ item.name }}"
        dest: "{{ item.dest }}"
        owner: "{{ file_owner }}"
        group: "{{ file_group }}"
        mode: "{{ file_mode }}"
        validate: 'python -c "import yaml; yaml.safe_load(open(\"%s\", \"r\").read())"'
      loop:
        - { name: "otel-collector.yaml", dest: "{{ observe_config_dir }}/otel-collector.yaml" }
        - { name: "logs.yaml", dest: "{{ observe_logs_dir }}/logs.yaml" }
      when: ansible_os_family == 'Debian'
      register: config_copy
      debug:
        msg: "Copied configuration files."
      changed_when: config_copy is changed

    - name: Initialize Observe agent configuration
      command: observe-agent init-config
        --token "{{ observe_token }}"
        --observe_url "{{ observe_url }}"
        --self_monitoring enabled=true
        --host_monitoring enabled=true
        --host_monitoring_logs enabled=true
        --host_monitoring_metrics_host enabled=true
        --host_monitoring_metrics_process enabled=true
      register: init_config
      changed_when: init_config.rc == 0
      failed_when: init_config.rc != 0
      no_log: true  # Hide sensitive token information from logs
      debug:
        msg: "Initialized Observe agent configuration."

    - name: Configure log exclusions
      blockinfile:
        path: /etc/observe-agent/observe-agent.yaml
        marker: "# {mark} ANSIBLE MANAGED BLOCK - LOG EXCLUSIONS"
        block: |
          # Excluding specific log patterns
          log_exclusions:
            - pattern: '/var/log/.*/.*\.log'
            - pattern: '/var/log/syslog'
        backup: yes
      register: config_block
      debug:
        msg: "Configured log exclusions."
      changed_when: config_block is changed

    - name: Start and enable Observe agent service
      systemd:
        name: "{{ observe_agent_service }}"
        state: started
        enabled: yes
        daemon_reload: yes
      register: service_status
      debug:
        msg: "Started and enabled Observe agent service."
      changed_when: service_status is changed

    - name: Verify service is running
      systemd:
        name: "{{ observe_agent_service }}"
      register: service_check
      failed_when: service_check.status.ActiveState != "active"
      debug:
        msg: "Verified service is running."
      changed_when: False

    - name: Pin Observe Agent Version
      dpkg_selections:
        name: "{{ observe_agent_service }}"
        selection: hold
      register: pin_status
      debug:
        msg: "Pinned Observe agent version."
      changed_when: pin_status is changed

    - name: Show installation status
      debug:
        msg: "Observe agent installation completed successfully. Service status: {{ service_check.status.ActiveState }}"
      changed_when: False

  handlers:
    - name: Restore configuration on failure
      copy:
        src: "{{ item }}.backup-{{ ansible_date_time.date }}"
        dest: "{{ item }}"
        remote_src: yes
      loop:
        - "{{ observe_config_dir }}/otel-collector.yaml"
        - "{{ observe_logs_dir }}/logs.yaml"
      when: (config_copy.failed is defined and config_copy.failed) or
            (init_config.failed is defined and init_config.failed) or
            (service_status.failed is defined and service_status.failed)
      ignore_errors: yes
      debug:
        msg: "Restored configuration files on failure."